<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Sistema de Videovigilancia from Scratch</title><link href="http://ull-etsii-sistemas-operativos.github.com/videovigilancia-blog/" rel="alternate"></link><link href="http://ull-etsii-sistemas-operativos.github.com/videovigilancia-blog/feeds/all-es.atom.xml" rel="self"></link><id>http://ull-etsii-sistemas-operativos.github.com/videovigilancia-blog/</id><updated>2013-01-13T00:00:00+00:00</updated><entry><title>Raspberry Pi</title><link href="http://ull-etsii-sistemas-operativos.github.com/videovigilancia-blog/raspberry-pi.html" rel="alternate"></link><updated>2013-01-13T00:00:00+00:00</updated><author><name>Jesús Torres</name></author><id>tag:ull-etsii-sistemas-operativos.github.com/videovigilancia-blog,2013-01-13:raspberry-pi.html</id><summary type="html">&lt;p&gt;Una Raspberry Pi es una placa computadora (&lt;a href="http://en.wikipedia.org/wiki/Single-board_computer" title="Single-board Computer"&gt;SBC&lt;/a&gt;) de bajo coste que incluye:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://upload.wikimedia.org/wikipedia/commons/thumb/3/3d/RaspberryPi.jpg/320px-RaspberryPi.jpg" style="float:right;margin:0 0px 10px 0"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Un &lt;a href="http://es.wikipedia.org/wiki/System_on_a_chip" title="System on a Chip"&gt;SOC&lt;/a&gt; Broadcom BCM2835, que contiene una CPU &lt;a href="http://en.wikipedia.org/wiki/ARM11" title="ARM11"&gt;ARM11&lt;/a&gt;76JZF-S a 700 MHz y
una GPU &lt;a href="http://en.wikipedia.org/wiki/VideoCore" title="VideoCore"&gt;VideoCore&lt;/a&gt; IV.&lt;/li&gt;
&lt;li&gt;512 MB de memoria RAM (en la versión B de Raspberry Pi, 256 MB en la versión A)
instalada sobre la CPU.&lt;/li&gt;
&lt;li&gt;Una ranura de tarjetas SD/MMC/SDIO para el almacenamiento no volatil.&lt;/li&gt;
&lt;li&gt;1 puerto Ethernet de 10/100Mb.&lt;/li&gt;
&lt;li&gt;2 puertos USB 2.0.&lt;/li&gt;
&lt;li&gt;1 puerto micro USB de alimentación.&lt;/li&gt;
&lt;li&gt;1 puerto tipo A de salida HDMI 1.3.a&lt;/li&gt;
&lt;li&gt;1 conector RCA de salida de video compuesto.&lt;/li&gt;
&lt;li&gt;1 conector jack esterio de 3.5mm para la salida de audio.&lt;/li&gt;
&lt;li&gt;1 conector de expansión de 26 pines con:&lt;ul&gt;
&lt;li&gt;8 puertos &lt;a href="http://en.wikipedia.org/wiki/General_Purpose_Input/Output" title="General-Purpose Input/Output"&gt;GPIO&lt;/a&gt; a 3.3v.&lt;/li&gt;
&lt;li&gt;2 puertos seriales (&lt;a href="http://es.wikipedia.org/wiki/Universal_Asynchronous_Receiver-Transmitter" title="Universal Asynchronous Receiver-Transmitter"&gt;UART&lt;/a&gt;) a 3.3v TTL o 2 puertos &lt;a href="http://en.wikipedia.org/wiki/General_Purpose_Input/Output" title="General-Purpose Input/Output"&gt;GPIO&lt;/a&gt; a 3.3v.&lt;/li&gt;
&lt;li&gt;1 interfaz &lt;a href="http://es.wikipedia.org/wiki/I2C" title="I²C (Inter-Integrated Circuit)"&gt;I2C&lt;/a&gt; (3.3v) o 2 puertos &lt;a href="http://en.wikipedia.org/wiki/General_Purpose_Input/Output" title="General-Purpose Input/Output"&gt;GPIO&lt;/a&gt; a 3.3v.&lt;/li&gt;
&lt;li&gt;1 interfaz &lt;a href="http://es.wikipedia.org/wiki/SPI" title="Serial Peripheral Interface"&gt;SPI&lt;/a&gt; (3.3v) o 5 puertos &lt;a href="http://en.wikipedia.org/wiki/General_Purpose_Input/Output" title="General-Purpose Input/Output"&gt;GPIO&lt;/a&gt; a 3.3v.&lt;/li&gt;
&lt;li&gt;Diversos pines a 3.3v, 5v y tierra (GND).&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;entre otros componentes. En la web del proyecto colaborativo &lt;a href="http://elinux.org/RPi_Hub" title="RPi Hub"&gt;Raspberry Pi Wiki&lt;/a&gt;
hay disponible más información sobre todo este &lt;a href="http://elinux.org/RPi_Hardware" title="RPi Hardware"&gt;hardware&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Respecto al software la &lt;a href="http://www.raspberrypi.org/about" title="Raspberry Pi Foundation"&gt;Fundación Raspberry Pi&lt;/a&gt; da soporte para las distribuciones
&lt;a href="http://www.raspbian.org/" title="Raspbian"&gt;Raspbian&lt;/a&gt; (derivada de Debian), &lt;a href="http://es.wikipedia.org/wiki/RISC_OS"&gt;RISC OS&lt;/a&gt;
y Arch Linux y promueve principalmente el aprendizaje de los lenguajes de
programación &lt;a href="http://es.wikipedia.org/wiki/Python" title="Lenguage de programación Python"&gt;Python&lt;/a&gt; y &lt;a href="http://es.wikipedia.org/wiki/Scratch_(lenguaje_de_programaci%C3%B3n)" title="Lenguage de programación Scratch"&gt;Scratch&lt;/a&gt; con &lt;a href="http://www.raspberrypi.org/archives/2965"&gt;fines educativos&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Otra organización que se ha volcado en Raspberry Pi es &lt;a href="http://www.adafruit.com/blog/category/raspberry-pi/" title="Adafruit - Raspberry Pi"&gt;Adafruit&lt;/a&gt;. Esta compañía
en la actualidad provee &lt;a href="https://www.adafruit.com/raspberrypi"&gt;productos&lt;/a&gt; relacionados,
&lt;a href="http://learn.adafruit.com/category/raspberry-pi"&gt;formación&lt;/a&gt;, su propia
distribución &lt;a href="http://learn.adafruit.com/adafruit-raspberry-pi-educational-linux-distro"&gt;Adafruit Raspberry Pi Educational Linux Distro&lt;/a&gt;,
que tiene algunas ventajas respecto a las oficiales, y el
entorno de desarrollo &lt;a href="http://learn.adafruit.com/webide/"&gt;Raspberry Pi WebIDE&lt;/a&gt;
basado en web para crear facilmente aplicaciones en &lt;a href="http://es.wikipedia.org/wiki/Python" title="Lenguage de programación Python"&gt;Python&lt;/a&gt;, Ruby o JavaScript.&lt;/p&gt;
&lt;h2&gt;Referencias adicionales&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://downloads.raspberrypi.org/Raspberry_Pi_Education_Manual.pdf"&gt;Raspberry Pi Educational Manual&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://elinux.org/RPi_Hardware" title="RPi Hardware"&gt;RPi Hardware&lt;/a&gt; en &lt;a href="http://elinux.org/RPi_Hub" title="RPi Hub"&gt;Raspberry Pi Wiki&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://elinux.org/RPi_Low-level_peripherals"&gt;RPi Low-level periperals&lt;/a&gt; en &lt;a href="http://elinux.org/RPi_Hub" title="RPi Hub"&gt;Raspberry Pi Wiki&lt;/a&gt; (incluye el detalle del conector de expasión).&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.raspberrypi.org/wp-content/uploads/2012/02/BCM2835-ARM-Peripherals.pdf"&gt;BCM2835 ARM Peripherals&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://infocenter.arm.com/help/topic/com.arm.doc.ddi0301h/DDI0301H_arm1176jzfs_r0p7_trm.pdf"&gt;ARM1176JZF-S Technical Reference Manual&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.raspberrypi.org/wp-content/uploads/2012/10/Raspberry-Pi-R2.0-Schematics-Issue2.2_027.pdf"&gt;Raspberry Pi 2.0 Schematics&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="rpi"></category><category term="raspberry pi"></category><category term="arm"></category><category term="gpio"></category><category term="videocore"></category><category term="broadcom"></category></entry><entry><title>Yocto, Poky y BitBake</title><link href="http://ull-etsii-sistemas-operativos.github.com/videovigilancia-blog/yocto-poky-y-bitbake.html" rel="alternate"></link><updated>2013-01-10T00:00:00+00:00</updated><author><name>Jesús Torres</name></author><id>tag:ull-etsii-sistemas-operativos.github.com/videovigilancia-blog,2013-01-10:yocto-poky-y-bitbake.html</id><summary type="html">&lt;p&gt;El proyecto &lt;a href="https://www.yoctoproject.org/" title="Yocto Project"&gt;Yocto&lt;/a&gt; proporciona a los desarrolladores de sistemas empotrados
Linux un punto de partida para generar distribuciones personalizadas para
sus productos. Una de las piezas clave del proyecto es el sistema de
construcción &lt;a href="http://www.pokylinux.org/" title="Poky Plataform Builder"&gt;Poky&lt;/a&gt;, que a su vez se apoya en &lt;a href="http://en.wikipedia.org/wiki/BitBake" title="BitBake"&gt;BitBake&lt;/a&gt;, una herramienta de
construcción de paquetes al estilo de
&lt;a href="http://es.wikipedia.org/wiki/Portage_(software)"&gt;Portage&lt;/a&gt; de
&lt;a href="http://www.gentoo.org/"&gt;Gentoo&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;El proyecto Yocto&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.yoctoproject.org/" title="Yocto Project"&gt;Yocto&lt;/a&gt; está financiado por la &lt;a href="http://www.linuxfoundation.org/"&gt;Linux Foundation&lt;/a&gt;.
Su principal objetivo es desarrollar herramientas que ayuden a los desarrolladores
a crear sus propias distribuciones de Linux, sea cual sea el hardware sobre el que
van a correr. Entre los proyectos desarrollados en el seno de &lt;a href="https://www.yoctoproject.org/" title="Yocto Project"&gt;Yocto&lt;/a&gt; están:
el sistema de construcción &lt;a href="http://www.pokylinux.org/" title="Poky Plataform Builder"&gt;Poky&lt;/a&gt;, el sistema de
&lt;a href="http://es.wikipedia.org/wiki/Integraci%C3%B3n_continua"&gt;integración continua&lt;/a&gt;
&lt;a href="http://autobuilder.yoctoproject.org/"&gt;Autobuiler&lt;/a&gt; y la librería de sistema
&lt;a href="http://www.eglibc.org/"&gt;Embedded GLIBC (EGLIBC)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Además, cuando se crea una distribución con &lt;a href="https://www.yoctoproject.org/" title="Yocto Project"&gt;Yocto&lt;/a&gt;, la herramienta de construcción
crea un SDK de desarrollo de aplicaciones adaptado a dicha distribución. Este
SDK puede conectarse al IDE &lt;a href="http://www.eclipse.org/" title="Eclipse IDE"&gt;Eclipse&lt;/a&gt; o puede usarse desde la línea de comandos.&lt;/p&gt;
&lt;h2&gt;El sistema de construcción Poky&lt;/h2&gt;
&lt;p&gt;Uno de los componentes centrales de &lt;a href="https://www.yoctoproject.org/" title="Yocto Project"&gt;Yocto&lt;/a&gt; es el sistema de construcción &lt;a href="http://www.pokylinux.org/" title="Poky Plataform Builder"&gt;Poky&lt;/a&gt;.
Su responsabilidad fundamental es la construcción de imágenes de sistemas de
archivos de sistemas Linux. Estos pueden incluir diferentes productos de software:
Linux, X11, Matchbox, GTK+, Pimlico, Clutter, D-BUS, etc.&lt;/p&gt;
&lt;p&gt;Aunque se pueden generar diferentes tipos de imágenes según el dispositivo donde
va a ser almacenada, el proyecto ejemplo estándar lo hace para el emulador &lt;a href="http://wiki.qemu.org/" title="QEMU"&gt;QEMU&lt;/a&gt;
y para placas de referencia reales de los fabricantes, para cada una de las
arquitecturas soportadas. Esta habilidad de &lt;a href="http://www.pokylinux.org/" title="Poky Plataform Builder"&gt;Poky&lt;/a&gt; lo hace especialmente
apropiado como plataforma de pruebas y de desarrollo de software para empotrados.&lt;/p&gt;
&lt;p&gt;Un proyecto similar a &lt;a href="http://www.pokylinux.org/" title="Poky Plataform Builder"&gt;Poky&lt;/a&gt; es &lt;a href="http://www.openembedded.org/" title="OpenEmbedded"&gt;OpenEmbedded&lt;/a&gt;, que también es un sistema de construcción
para sistemas Linux empotrados. &lt;a href="http://www.pokylinux.org/" title="Poky Plataform Builder"&gt;Poky&lt;/a&gt; deriva de un proyecto para crear
una rama estabilizada de &lt;a href="http://www.openembedded.org/" title="OpenEmbedded"&gt;OpenEmbedded&lt;/a&gt;, limitando el software disponible a unos
pocos paquetes, de entre los miles de los que dispone &lt;a href="http://www.openembedded.org/" title="OpenEmbedded"&gt;OpenEmbedded&lt;/a&gt;, así como el número
de arquitecturas soportadas. Con el tiempo esta rama evolucionó añadiendo
el componente de &lt;a href="http://www.eclipse.org/" title="Eclipse IDE"&gt;Eclipse&lt;/a&gt; y la generación de imágenes para &lt;a href="http://wiki.qemu.org/" title="QEMU"&gt;QEMU&lt;/a&gt;, entre otras cosas.
Esto dio origen a &lt;a href="http://www.pokylinux.org/" title="Poky Plataform Builder"&gt;Poky&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;El núcleo central de &lt;a href="http://www.pokylinux.org/" title="Poky Plataform Builder"&gt;Poky&lt;/a&gt; es la herramienta de construcción &lt;a href="http://en.wikipedia.org/wiki/BitBake" title="BitBake"&gt;BitBake&lt;/a&gt; junto
con una colección de archivos de configuración de diversos tipos que definen
todo lo necesario para construir la imagen del sistema Linux.&lt;/p&gt;
&lt;h2&gt;La herramienta de construcción BitBake&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/BitBake" title="BitBake"&gt;BitBake&lt;/a&gt; es básicamente un ejecutor de tareas. Su función es leer los archivos
de configuración que definen el proyecto; establecer que tareas deben ser realizadas
y en que orden, obviamente en función de las dependencias y para maximizar la eficiencia
(por ejemplo primero se intentan ejecutar las que son dependencias comunes a otras tareas)
y finalmente ejecutarlas.&lt;/p&gt;
&lt;p&gt;Los tipos de archivos de configuración que maneja &lt;a href="http://en.wikipedia.org/wiki/BitBake" title="BitBake"&gt;BitBake&lt;/a&gt; son:&lt;/p&gt;
&lt;dl&gt;
 &lt;dt&gt;Recetas (.bb)&lt;/dt&gt;
 &lt;dd&gt;Contienen información acerca de un componente de software concreto. Entre
 dicha información, por ejemplo, podemos destacar: desde donde descargar los
 parches para las fuentes, que configuraciones deben ser aplicadas antes de
 la compilación, como se compila el componente y como se empaqueta el resultado.&lt;/dd&gt;
 &lt;dt&gt;Clases (.bbclass)&lt;/dt&gt;
 &lt;dd&gt;Contienen información que es interesante compartir entre distintas recetas.
 Por ejemplo la clase **autotools**, que contiene configuraciones comunes para
 cualquier aplicación que utiliza la herramienta **autotools**.&lt;/dd&gt;
 &lt;dt&gt;Configuraciones (.conf)&lt;/dt&gt;
 &lt;dd&gt;Define diversas variables de configuración que controlan lo que Poky va
 a hacer. Esto incluye configuraciones específicas de la maquina, opciones de
 configuración de la distribución, ajustes del compilador, configuraciones de
 usuario, etc.&lt;/dd&gt;
&lt;/dl&gt;

&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/BitBake" title="BitBake"&gt;BitBake&lt;/a&gt; puede combinar varios de estos archivos en los se denomina como &lt;strong&gt;capas&lt;/strong&gt;.
Una capa es un agrupamiento de recetas que proporciona algún tipo de funcionalidad
adicional. Pueden ser un &lt;a href="http://en.wikipedia.org/wiki/Board_support_package" title="Board Support Package"&gt;BSP&lt;/a&gt; para un nuevo dispositivo, tipos de imágenes
adicionales o software no incluido en Poky.&lt;/p&gt;
&lt;p&gt;Los mismos metadatos principales del proyecto &lt;a href="https://www.yoctoproject.org/" title="Yocto Project"&gt;Yocto&lt;/a&gt;, &lt;strong&gt;meta-yocto&lt;/strong&gt;, son por si
mismos una capa aplicada sobre la capa de metadatos OE-Core que añade software
adicional y tipos de imágenes a esta última.&lt;/p&gt;
&lt;p&gt;Un ejemplo de como funciona esto se puede ver al crear un dispositivo &lt;a href="http://es.wikipedia.org/wiki/Network-attached_storage" title="Network-attached storage"&gt;NAS&lt;/a&gt;
(Network-attached Storage) para la CPU Intel E660
(&lt;a href="http://www.intel.com/p/es_XL/embedded/hwsw/hardware/atom-e6xx/overview"&gt;Crown Bay&lt;/a&gt;)
usando x32, el nuevo &lt;a href="http://en.wikipedia.org/wiki/Application_binary_interface" title="Application binary interface"&gt;ABI&lt;/a&gt; nativo de 32 bits para procesadores x86-64:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;En el nivel más bajo colocaríamos una capa &lt;a href="http://en.wikipedia.org/wiki/Board_support_package" title="Board Support Package"&gt;BSP&lt;/a&gt; para Crown Bay que activaría
 funcionalidades específicas del hardware de estos procesadores.
 Esta capa, por ejemplo, incluiría los drivers de vídeo.&lt;/li&gt;
&lt;li&gt;Como queremos utilizar x32, añadiríamos posteriormente la capa &lt;strong&gt;meta-x32&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;La funcionalidad de &lt;a href="http://es.wikipedia.org/wiki/Network-attached_storage" title="Network-attached storage"&gt;NAS&lt;/a&gt; se incorporaría añadiendo la capa &lt;strong&gt;meta-bayron&lt;/strong&gt;,
 que el mismo proyecto &lt;a href="https://www.yoctoproject.org/" title="Yocto Project"&gt;Yocto&lt;/a&gt; nos ofrece como ejemplo.&lt;/li&gt;
&lt;li&gt;Finalmente incorporaríamos una capa, que imaginariamente llamaremos
 &lt;strong&gt;meta-myproject&lt;/strong&gt;, para proveer el software y la configuraciones necesarias
 para crear una interfaz gráfica de usuario de configuración del &lt;a href="http://es.wikipedia.org/wiki/Network-attached_storage" title="Network-attached storage"&gt;NAS&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Como hemos comentado, cada una de estas capas estaría formada por uno o más
archivos de configuración de los tipos indicados anteriormente.&lt;/p&gt;
&lt;h2&gt;Referencias&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.aosabook.org/en/yocto.html"&gt;The Yocto Proyect&lt;/a&gt;.
 &lt;a href="http://www.aosabook.org/"&gt;The Architecture of Open Source Applications&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://wiki.yoctoproject.org/wiki/FAQ"&gt;Yocto Proyect FAQ&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.yoctoproject.org/docs/1.0/poky-ref-manual/poky-ref-manual.html"&gt;Poky HandBook&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;</summary><category term="yocto"></category><category term="poky"></category><category term="bitbake"></category><category term="empotrado"></category><category term="linux"></category><category term="openembedded"></category></entry></feed>